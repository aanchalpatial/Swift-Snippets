extension Decodable {
    static func parse(jsonFile: String) -> Self? {
        let decoder = JSONDecoder()
        decoder.keyDecodingStrategy = .convertFromSnakeCase
        
        guard let url = Bundle.main.url(forResource: jsonFile, withExtension: "json"),
              let data = try? Data(contentsOf: url),
              let response = try? decoder.decode(Self.self, from: data) else {
            return nil
        }
        return response
    }
    
    static func parse(jsonString: String) -> Self? {
        let decoder = JSONDecoder()
        decoder.keyDecodingStrategy = .convertFromSnakeCase
        
        guard let data = jsonString.data(using: .utf8),
              let response = try? decoder.decode(Self.self, from: data) else {
            return nil
        }
        return response
    }
}

struct Person: Decodable {
    let name: String
    let age: Int
}

let apJson = """
    {
    "name": "aanchal",
    "age": 26
    }
"""

if let ap = Person.parse(jsonString: apJson) {
    print(ap.name)
}

